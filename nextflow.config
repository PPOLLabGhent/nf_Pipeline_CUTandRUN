nextflow.enable.dsl=2
cleanup = true

// MAIN PARAMETERS
params {

    // Basispad
    pathBase = "$VSC_DATA_VO/PPOL/resources/sharedData/CUTandRUN_BDC_SLB/"

    // In- en output directories
    inputDir   = "$pathBase/FASTQfiles/$params.RunName"
    dataDir    = "$pathBase/Data"
    resultsDir = "$pathBase/Results"

    // Pipeline specifieke parameters
    FragSize   = 120
    HomerSize  = 200

    // Metadata CSV's
    SampleSheet       = "$params.inputDir/samplesheet*.csv"
    PeakcallingSheet  = "$params.inputDir/peakcalling*.csv"

    // Referenties & Indexen
    IGV19Genome       = "$VSC_DATA_VO/PPOL/resources/repos/IGVTools/genomes/hg19.chrom.sizes"
    HG19Index         = "$VSC_DATA_VO/PPOL/resources/ensembl/homo_sapiens/release-75/genome_index/homo_sapiens"
    blackfilter19path = "$VSC_DATA_VO/PPOL/resources/Blacklist_Encode_hg19_nochr.bed"

    IGV38Genome       = "$VSC_DATA_VO/PPOL/resources/repos/IGVTools/genomes/hg38.chrom.sizes"
    HG38Index         = "$VSC_DATA_VO/PPOL/resources/ensembl/homo_sapiens/release-91/genome_index/homo_sapiens"
    blackfilter38path = "$VSC_DATA_VO/PPOL/resources/Blacklist_Encode_hg38_nochr.bed"

    // Automatische koppeling van referenties
    IGVGenome.'hg19:IGV'            = IGV19Genome
    BlackFilterPath.'hg19:BlackFiltering' = blackfilter19path
    HGIndex.'hg19:MapFiles'         = HG19Index
    hg19Tuple = ["hg19", true, false]

    IGVGenome.'hg38:IGV'            = IGV38Genome
    HGIndex.'hg38:MapFiles'         = HG38Index
    BlackFilterPath.'hg38:BlackFiltering' = blackfilter38path
    hg38Tuple = ["hg38", false, true]

    // Resources
    big_task_cpus = 9
}

// PROCESS CONFIGURATIE
process {
    // General settings for all processes
    executor         = 'slurm'
    container        = "/scratch/gent/436/vsc43612/Apptainer/CR_Nextflow_Pipeline_v1.2.sif"
    containerEngine  = 'apptainer'
    cpus             = 2
    memory           = '4 GB'
    time             = '2h'
    cache            = 'lenient'

    // Specifieke resource overrides per proces
    withName: Homer_findMotif {
        cpus   = 16
        memory = '128 GB'
        time   = '2h'
    }

    withName: Homer_annotatePeaks {
        cpus   = 1
        memory = '8 GB'
        time   = '1h'
    }

    // Labels gebruiken voor gegroepeerde processen
    withLabel: big_task {
        cpus   = params.big_task_cpus
        memory = '32 GB'
        time   = '2h'
    }

    withLabel: small_task {
        cpus   = 2
        memory = '8 GB'
        time   = '20m'
    }
}
